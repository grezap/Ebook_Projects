#pragma checksum "C:\_Dev_Repos_\_Github_Repos_\Ebook_Projects\Appress.Blazor-Revealed\MyFirstBlazor\MyFirstBlazor.Client\Pages\Counter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c00fd89363da53a82c423f267ffb90d35146967"
// <auto-generated/>
#pragma warning disable 1591
namespace MyFirstBlazor.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using MyFirstBlazor.Client;
    using MyFirstBlazor.Client.Shared;
    using Microsoft.AspNetCore.Components;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/counter")]
    public class Counter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.AddMarkupContent(0, "<h1>Counter</h1>\r\n\r\n");
            builder.OpenElement(1, "p");
            builder.AddContent(2, "Current count: ");
            builder.AddContent(3, currentCount);
            builder.CloseElement();
            builder.AddMarkupContent(4, "\r\n\r\n");
            builder.OpenElement(5, "button");
            builder.AddAttribute(6, "class", "btn btn-primary");
            builder.AddAttribute(7, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, IncrementCount));
            builder.AddContent(8, "Click me");
            builder.CloseElement();
            builder.AddMarkupContent(9, "\r\n\r\n");
            builder.OpenElement(10, "input");
            builder.AddAttribute(11, "type", "number");
            builder.AddAttribute(12, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(increment));
            builder.AddAttribute(13, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => increment = __value, increment));
            builder.CloseElement();
            builder.AddMarkupContent(14, "\r\n\r\n");
            builder.OpenElement(15, "input");
            builder.AddAttribute(16, "type", "number");
            builder.AddAttribute(17, "value", increment);
            builder.AddAttribute(18, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, (UIChangeEventArgs e) => increment = int.Parse($"{e.Value}")));
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n\r\n");
            builder.OpenElement(20, "input");
            builder.AddAttribute(21, "type", "text");
            builder.AddAttribute(22, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(somedate, "yyyy-MM-dd"));
            builder.AddAttribute(23, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => somedate = __value, somedate, "yyyy-MM-dd"));
            builder.CloseElement();
            builder.AddMarkupContent(24, "\r\n\r\n");
            builder.OpenElement(25, "button");
            builder.AddAttribute(26, "class", "btn btn-success");
            builder.AddAttribute(27, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, AutoIncrement));
            builder.AddContent(28, "Auto Increment");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 19 "C:\_Dev_Repos_\_Github_Repos_\Ebook_Projects\Appress.Blazor-Revealed\MyFirstBlazor\MyFirstBlazor.Client\Pages\Counter.razor"
            
    int currentCount = 0;

    int increment = 1;

    private DateTime somedate = DateTime.Now;

    void IncrementCount()
    {
        currentCount += increment;
    }

    void AutoIncrement()
    {
        var timer = new System.Threading.Timer((_) => { IncrementCount(); StateHasChanged(); },null, TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1));
    }


#line default
#line hidden
    }
}
#pragma warning restore 1591
